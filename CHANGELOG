# Changelog

## [0.11.0] - 2021-11-26

### Added
- new global context-object for global accessable read-only-variables

### Changed
- renamed group-type `special` to only `-`

### Removed
- removed the required-flag for registration of output-fields, because it is not used anyway


## [0.10.0] - 2021-11-19

### Added
- additional field within blossoms to retrun an internal error to not mix this with syntax-error within the scripts

### Changed
- use error-containers
- updated field-registration in blossoms

### Fixed
- removed memory-leak with the new added memroy-leak-tests

### Removed
- the unused function 'getRelativePath' was removed from the interface


## [0.9.1] - 2021-10-04

### Changed
- update from c++14 to c++17


## [0.9.0] - 2021-09-26

### Added
- made blossoms directly callable for easier handlich of small tasks

### Changed
- big restructures of the thread internal task-handling


## [0.8.0] - 2021-07-30

### Changed
- reworked the collecting of sakura-files to be more minimal, because the old version also had some advantages, but the code was totally dirty and hard to maintain
- change the registration in the validation-map for better usability


## [0.7.2] - 2021-03-29

### Added
- new simple function for plain reading files from a directory

### Fixed
- fixed some compiler-warings


## [0.7.1] - 2020-11-29

### Added
- possibility to trigger trees by id instead of file-path

### Changed
- update override-files for the case to override non-existing values
- when trigger a tree, the initial values will be filled with empty values for each not set value


## [0.7.0] - 2020-10-11

### Added
- add functionallity to return results back to the interface-class, which was necessary for libKitsunemimiSakuraMessaging to return results over network. This resulted in some API-breaking changes.


## [0.6.0] - 2020-10-08

### Changed
- reworked interface to be usable for other use-cases beside SakuraTree


## [0.5.1] - 2020-09-26

### Fixed
- fixed name-conflicts in blossom- and subtree-calls by adding new validation in parser
- fix resource- and subtree-calls, which had failed when they had no output


## [0.5.0] - 2020-09-20

### Changed
- updated interface of the library for easier handling
- updated comments

### Fixed
- different little fixes that were found while cleanup


## [0.4.0] - 2020-09-06

### Changed
- moved the complete processing of the scripts from SakuraTree into this library here to make the scripts available for other projects


## [0.3.1] - 2020-08-29

### Fixed
- fixed copy-method of tree-items which was broken


## [0.3.0] - 2020-08-27

### Added
- new seed-type
- resources
- data-structures, which were originally part of SakuraTree
- comments in sakura-files
- multi-line strings

### Fixed
- json-parsing
- parsing of empty maps and array
- if-conditions without else-branch
- diffent other little fixes

### Changed
- generate data-structures direct without the json intermediate step
- file-path in blossom-items
- split parser-interface in multiple methods
- renamed subtrees to trees



## [0.2.0] - 2019-12-30

### Changed
- complete rework of the syntax


## [0.1.0] - 2019-08-17

### Added
- first state of grammar with forest, tree, branch and blossom
